{"version":3,"sources":["components/Card.js","components/CardList.js","components/Header.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","allCards","map","user","j","Header","SearchBox","searchbar","searchchange","type","placeholder","onChange","Scroll","children","App","onSearchChange","events","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAeeA,EAbF,SAACC,GACV,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA8CC,IAAI,WAC1D,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCWXC,EAfE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAWD,EAAOE,KAAI,SAACC,EAAMC,GAC/B,OAAQ,cAAC,EAAD,CACRT,GAAIK,EAAOI,GAAGT,GACdE,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,WAGrB,OACI,qBAAKL,UAAU,gCAAf,SACKQ,KCDEI,G,MAVA,WACX,OACI,qBAAKZ,UAAU,iBAAf,SACI,oBAAIA,UAAU,WAAd,6BCUGa,EAdG,SAAC,GAA8B,EAA7BC,UAA8B,IAAnBC,EAAkB,EAAlBA,aAC3B,OACI,qBAAKf,UAAU,MAAf,SACI,uBAAOA,UAAU,iCACjBgB,KAAK,SAASC,YAAY,gBACtBC,SAAWH,OCIZI,G,MARA,SAACpB,GACZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAMqB,aC6CJC,G,wDA1CX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACV,UAAWS,EAAOE,OAAOC,SAZxC,EAAKC,MAAQ,CACTpB,OAAQ,GACRO,UAAW,IAJN,E,gEAQO,IAAD,OACfc,MAAM,8CACXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAACjB,OAASyB,S,+BAM7B,IAAD,OACEC,EAAiBC,KAAKP,MAAMpB,OAAO4B,QAAO,SAAAC,GAC5C,OAAOA,EAAMhC,KAAKiC,cAAcC,SAAS,EAAKX,MAAMb,UAAUuB,kBAElE,OAAiC,IAA7BH,KAAKP,MAAMpB,OAAOgC,OAEV,qBAAKvC,UAAU,SAAf,SACI,oBAAIA,UAAU,YAAd,uBAMZ,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWe,aAAgBmB,KAAKZ,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,CAAUf,OAAS0B,a,GAnCrBO,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bb48baf2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    return(\r\n        <div className='bg-light-blue dib br3 pa3 ma2 grow bw2 shadow tc'>\r\n            <img src={`https://robohash.org/${props.id}?200x200`} alt='robots'/>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    const allCards = robots.map((user, j) => {\r\n        return (<Card \r\n        id={robots[j].id}\r\n        name={robots[j].name} \r\n        email={robots[j].email}/>\r\n        );\r\n    });\r\n    return(\r\n        <div className='flex justify-center flex-wrap'>\r\n            {allCards}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className='pa1 tc f2 grow'>\r\n            <h1 className='robohead'>RoboFriends</h1>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nconst SearchBox = ({searchbar, searchchange}) => {\r\n    return(\r\n        <div className=' tc'>\r\n            <input className='pa3 ba b--blue bg-washed-green'\r\n            type='search' placeholder='Search Robots'\r\n                onChange= {searchchange}\r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SearchBox;","import React from 'react'\r\nimport './Scroll.css'\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div className='scroll'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React, {Component} from 'react'\r\nimport CardList from '../components/CardList'\r\nimport Header from '../components/Header'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchbar: ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n  .then(response => response.json())\r\n  .then(users => {this.setState({robots : users})})\r\n    }\r\n    onSearchChange = (events) =>{\r\n        this.setState({searchbar: events.target.value})\r\n        \r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchbar.toLowerCase());\r\n        })\r\n        if (this.state.robots.length === 0){\r\n            return (\r\n                    <div className=\"loader\">\r\n                        <h1 className='load grow'>LOADING</h1>\r\n   \r\n                    </div>\r\n               )\r\n        }else\r\n        {return (\r\n            <div>\r\n                <Header/>\r\n                <SearchBox searchchange = {this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={ filteredRobots }/>\r\n                </Scroll>\r\n            </div>\r\n        )}\r\n    }\r\n} \r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}